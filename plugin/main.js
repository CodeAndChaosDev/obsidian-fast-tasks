/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var y=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var A=Object.prototype.hasOwnProperty;var S=(d,a)=>{for(var t in a)y(d,t,{get:a[t],enumerable:!0})},V=(d,a,t,i)=>{if(a&&typeof a=="object"||typeof a=="function")for(let e of M(a))!A.call(d,e)&&e!==t&&y(d,e,{get:()=>a[e],enumerable:!(i=C(a,e))||i.enumerable});return d};var $=d=>V(y({},"__esModule",{value:!0}),d);var D={};S(D,{default:()=>w});module.exports=$(D);var b=require("obsidian");var m=require("obsidian"),k=class extends m.Modal{constructor(t,i){super(t);this.description="";this.priority="\u26A0 Medium";this.time="";this.duration="";this.tags=[];this.onSubmit=i}onOpen(){let{contentEl:t}=this;t.createEl("h2",{text:"New Task"}),new m.Setting(t).setName("Description").addText(i=>i.onChange(e=>{this.description=e})),new m.Setting(t).setName("Priority").addDropdown(i=>i.addOption("\u{1F525} High","\u{1F525} High").addOption("\u26A0 Medium","\u26A0 Medium").addOption("\u{1F4A4} Low","\u{1F4A4} Low").setValue(this.priority).onChange(e=>{this.priority=e})),new m.Setting(t).setName("Time (HH:MM)").addText(i=>i.setPlaceholder("14:30").onChange(e=>{this.time=e})),new m.Setting(t).setName("Estimated Duration").addText(i=>i.setPlaceholder("30min").onChange(e=>{this.duration=e})),new m.Setting(t).setName("Tags (comma-separated)").addText(i=>i.setPlaceholder("#work, #deep").onChange(e=>{this.tags=e.split(",").map(s=>s.trim()).filter(s=>s.length>0)})),new m.Setting(t).addButton(i=>i.setButtonText("Add Task").setCta().onClick(()=>{this.onSubmit({description:this.description,priority:this.priority,time:this.time,duration:this.duration,tags:this.tags}),this.close()}))}onClose(){this.contentEl.empty()}};var c=require("obsidian"),f=class{constructor(a,t){this.app=a;this.sidebar=t;this.listeners=[]}setSidebar(a){this.sidebar=a}refreshSidebar(){var a,t;(t=(a=this.sidebar)==null?void 0:a.refreshView)==null||t.call(a)}async insertTask(a){var s,r,o,n;let t=this.app.workspace.getActiveFile();if(!t)return;let i=await this.app.vault.read(t),e=`- [ ] ${a.priority} ${a.description} @${(s=a.time)!=null?s:""} (${(r=a.duration)!=null?r:""}) ${(n=(o=a.tags)==null?void 0:o.join(" "))!=null?n:""}
`;await this.app.vault.modify(t,i+`
`+e),this.refreshSidebar()}async getTasksFromActiveFile(){let a=this.app.workspace.getActiveFile();if(!a)return null;let i=(await this.app.vault.read(a)).split(`
`),e=[];return i.forEach((s,r)=>{if(s.trim().startsWith("- [ ]")){let o=s.match(/- \[ \] (ðŸ”¥ High|âš  Medium|ðŸ’¤ Low)?\s?(.*?)\s?@(\d{1,2}:\d{2})?\s?\((.*?)\)?\s?(.*)?/);if(o){let[,n,l,p,h,u]=o;e.push({priority:n!=null?n:"\u26A0 Medium",description:l.trim(),time:p!=null?p:"",duration:h!=null?h:"",tags:u?u.split(" ").filter(Boolean):[],lineNumber:r})}}}),{tasks:e,lines:i,file:a}}async moveTask(a){var u;let t=await this.getTasksFromActiveFile();if(!t)return;let{tasks:i,lines:e,file:s}=t,r=(u=this.app.workspace.getActiveViewOfType(c.MarkdownView))==null?void 0:u.editor;if(!r)return;let o=r.getCursor().line,n=i.find(x=>x.lineNumber===o);if(!n||n.lineNumber===void 0)return;let l=n.lineNumber,p=l+a;if(p<0||p>=e.length)return;let h=e[l];e[l]=e[p],e[p]=h,await this.app.vault.modify(s,e.join(`
`)),r.setCursor({line:p,ch:0}),this.refreshSidebar()}async rescheduleTask(){var r;let a=this.app.workspace.getActiveFile();if(!a)return;let t=(r=this.app.workspace.activeEditor)==null?void 0:r.editor;if(!t)return;let i=t.getCursor().line,e=t.getLine(i);if(!e.match(/- \[ \]/)){new c.Notice("Not a task line");return}new v(this.app,async o=>{let n=e.match(/@[\d:]+/)?e.replace(/@[\d:]+/,`@${o}`):e.replace(/(\(.*?\))/,`@${o} $1`);t.setLine(i,n),await this.app.vault.modify(a,t.getValue()),await this.refreshSidebar(),new c.Notice(`Rescheduled to ${o}`)}).open()}async togglePriority(){var p;let a=await this.getTasksFromActiveFile();if(!a)return;let{tasks:t,lines:i,file:e}=a,s=(p=this.app.workspace.getActiveViewOfType(c.MarkdownView))==null?void 0:p.editor;if(!s)return;let r=s.getCursor().line,o=t.find(h=>h.lineNumber===r);if(!o)return;let n=o.priority==="\u{1F525} High"?"\u26A0 Medium":o.priority==="\u26A0 Medium"?"\u{1F4A4} Low":"\u{1F525} High",l=i[r];i[r]=l.replace(/(ðŸ”¥ High|âš  Medium|ðŸ’¤ Low)/,n),await this.app.vault.modify(e,i.join(`
`)),this.refreshSidebar()}},v=class extends c.Modal{constructor(t,i){super(t);this.onSubmit=i}onOpen(){let{contentEl:t}=this;t.createEl("h2",{text:"New Time (HH:MM)"});let i=new c.TextComponent(t);i.inputEl.style.width="100%",i.setPlaceholder("14:30"),new c.ButtonComponent(t).setButtonText("Save").setCta().onClick(()=>{let e=i.getValue().trim();if(!e.match(/^\d{1,2}:\d{2}$/)){new c.Notice("Invalid time format");return}this.onSubmit(e),this.close()})}onClose(){let{contentEl:t}=this;t.empty()}};var T=require("obsidian"),g=class extends T.ItemView{constructor(t,i){super(t);this.manager=i}getViewType(){return"taskmaster-sidebar"}getDisplayText(){return"TaskMaster Sidebar"}async onOpen(){var e,s,r;let t=this.containerEl.children[1];t.empty(),t.createEl("h3",{text:"Your Tasks"});let i=await this.manager.getTasksFromActiveFile();if(!i){t.createEl("p",{text:"No active file or tasks found."});return}for(let o of i.tasks)t.createEl("div",{text:`${o.priority} ${o.description} @${(e=o.time)!=null?e:""} (${(s=o.duration)!=null?s:""}) ${(r=o.tags)==null?void 0:r.join(" ")}`}).classList.add("task-sidebar-item")}async onClose(){}async refreshView(){var e;let t=this.containerEl.children[1];t.empty(),t.createEl("h3",{text:"Your Tasks (Auto-updated)"});let i=await this.manager.getTasksFromActiveFile();if(i)for(let s of i.tasks)t.createEl("div",{text:`${s.priority} ${s.description} @${(e=s.time)!=null?e:""}`})}};var w=class extends b.Plugin{constructor(){super(...arguments);this.sidebar=null}async onload(){var i,e;this.manager=new f(this.app),(e=(i=this.app.viewRegistry)==null?void 0:i.views)!=null&&e["taskmaster-sidebar"]||this.registerView("taskmaster-sidebar",s=>{let r=new g(s,this.manager);return this.sidebar=r,this.manager.setSidebar(r),r}),this.addRibbonIcon("check-circle","Open Task Sidebar",()=>{this.activateView()}),this.addCommand({id:"open-task-modal",name:"Create New Task",hotkeys:[{modifiers:["Mod"],key:"q"}],callback:()=>new k(this.app,s=>this.manager.insertTask(s)).open()}),this.addCommand({id:"move-task-up",name:"Move Task Up",hotkeys:[{modifiers:["Mod"],key:"ArrowUp"}],callback:()=>this.manager.moveTask(-1)}),this.addCommand({id:"move-task-down",name:"Move Task Down",hotkeys:[{modifiers:["Mod"],key:"ArrowDown"}],callback:()=>this.manager.moveTask(1)}),this.addCommand({id:"reschedule-task",name:"Reschedule Task",hotkeys:[{modifiers:["Mod"],key:"r"}],callback:()=>this.manager.rescheduleTask()}),this.addCommand({id:"toggle-priority",name:"Toggle Task Priority",hotkeys:[{modifiers:["Mod"],key:"p"}],callback:()=>this.manager.togglePriority()})}async activateView(){let t=this.app.workspace.getRightLeaf(!1);t&&(await t.setViewState({type:"taskmaster-sidebar",active:!0}),this.app.workspace.revealLeaf(t))}onunload(){var i,e;this.app.workspace.detachLeavesOfType("taskmaster-sidebar");let t=this.app;(e=(i=t.viewRegistry)==null?void 0:i.views)!=null&&e["taskmaster-sidebar"]&&delete t.viewRegistry.views["taskmaster-sidebar"]}};
